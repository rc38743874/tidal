using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;

namespace TidalCSharp {

	public class MicrosoftSQLProcedureRemover : IProcedureRemover {
		 
		
		private SqlConnection SqlConnection { get; set; }

		public MicrosoftSQLProcedureRemover(SqlConnection connection) {
			this.SqlConnection = connection;
		}

		
		public void RemoveTidalStoredProcs(
			string databaseName, string moduleName) {
			
			SqlConnection conn = this.SqlConnection;

			List<string> procNameList = new List<string>();
			using (SqlCommand command = new SqlCommand() {
                CommandText = "SELECT Name = name FROM sys.sql_modules INNER JOIN sysobjects ON sys.sql_modules.object_id = sysobjects.id WHERE name like '" + moduleName + "_%' AND definition like '%-- Generated by Tidal%' ORDER BY name;",
				CommandType = CommandType.Text,
				Connection = conn}) {
				using (var reader = command.ExecuteReader()) {
					while (reader.Read()) {
						IDataRecord row = reader;
						procNameList.Add((string)row["Name"]);
					} 
				}
			}


            /* TODO: since this matches MySQL, move these and anything else to a base class once we know commonality */
			foreach (string procName in procNameList) {
				string cleanName = procName.Replace("'","''").Replace(";","");
                Console.WriteLine("Dropping procedure " + cleanName);
				using (SqlCommand command = new SqlCommand("DROP PROCEDURE " + cleanName, conn)) {
					command.ExecuteNonQuery();
				}
			}

		}
	}
}

