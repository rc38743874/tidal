using System;
using System.Collections.Generic;
using MySql.Data;
using MySql.Data.MySqlClient;
using System.Data;
using System.Data.Common;

namespace TidalCSharp {

	public class MySQLProcedureRemover : IProcedureRemover {
		 
		
		private MySqlConnection mySqlConnection { get; set; }

		public MySQLProcedureRemover(MySqlConnection connection) {
			this.mySqlConnection = connection;
		}

		
		public void RemoveTidalStoredProcs(
			string databaseName, string moduleName) {
			
			MySqlConnection conn = this.mySqlConnection;

			
			List<string> procNameList = new List<string>();
			using (MySqlCommand command = new MySqlCommand() {
				CommandText = "SHOW PROCEDURE STATUS where Db='" + databaseName + "' AND Name like '" + moduleName + "_%' AND Comment LIKE 'Generated by Tidal%';",
				CommandType = CommandType.Text,
				Connection = conn}) {
				using (var reader = command.ExecuteReader()) {
					while (reader.Read()) {
						IDataRecord row = reader;
						procNameList.Add((string)row["Name"]);
					} 
				}
			}


			foreach (string procName in procNameList) {
				string cleanName = procName.Replace("'","''").Replace(";","");
				using (MySqlCommand command = new MySqlCommand("DROP PROCEDURE " + cleanName, conn)) {
					command.ExecuteNonQuery();
				}
			}

		}
	}
}

